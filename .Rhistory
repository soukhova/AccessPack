# plot_avail <- ggplot() +
#   geom_sf(data = TO_taz_acc,
#           aes(fill= V_i), color = NA) +
#     scale_fill_distiller(palette = "Spectral",  trans = "sqrt")
plot_c_access <- ggplot() +
geom_sf(data = TO_taz_acc,
aes(fill= TO_A_i), color = NA) +
scale_fill_distiller(palette = "Spectral", trans = "sqrt")
# plot_avail /
plot_c_access
View(TO_taz_acc)
#Merge TO accessibly calculation to the GTHA_taz:
TO_taz_acc <- gtha_taz_acc %>% merge(TO_c_accessibility, by.x=c("GTA06"), by.y=c("Origin"), all.x=T)
#Merge TO accessibly calculation to the GTHA_taz:
TO_taz_acc <- gtha_taz %>% merge(TO_c_accessibility, by.x=c("GTA06"), by.y=c("Origin"), all.x=T)
#Merge TO accessibly calculation to the GTHA_taz:
TO_taz_acc <- gtha_taz %>% merge(TO_c_accessibility, by.x=c("GTA06"), by.y=c("Origin"), all.y=T)
# plot_avail <- ggplot() +
#   geom_sf(data = TO_taz_acc,
#           aes(fill= V_i), color = NA) +
#     scale_fill_distiller(palette = "Spectral",  trans = "sqrt")
plot_c_access <- ggplot() +
geom_sf(data = TO_taz_acc,
aes(fill= TO_A_i), color = NA) +
scale_fill_distiller(palette = "Spectral", trans = "sqrt")
# plot_avail /
plot_c_access
#calculate spatial availability
TO_od_ft <- TO_od_ft %>%
mutate(TO_V_ij = sp_avail(.,
o_id = Origin,
d_id = Destination,
pop = workers,
opp = jobs,
r = catch,
f = f))
sum(TO_od_ft$TO_V_ij, na.rm=T)
sum_jobs <- TO_od_ft %>% group_by(Destination) %>% summarise(jobs = mean(jobs))
sum(sum_jobs$jobs, na.rm = T)
#Merge TO availability calculation to the GTHA_taz:
TO_taz_acc  <-
gtha_taz %>% merge(TO_availability, by.x=c("GTA06"), by.y=c("Origin"), all.x=T)
TO_availability <- TO_od_ft %>%
group_by(Origin) %>%
summarize(TO_V_i = sum(TO_V_ij))
gtha_taz %>% merge(TO_availability, by.x=c("GTA06"), by.y=c("Origin"), all.x=T)
TO_taz_acc %>% merge(TO_availability, by.x=c("GTA06"), by.y=c("Origin"), all.x=T)
#Merge TO availability calculation to the TAZ sf object created for accessibility above:
TO_taz_acc <- TO_taz_acc %>% merge(TO_availability, by.x=c("GTA06"), by.y=c("Origin"), all.x=T)
plot_avail <- ggplot() +
geom_sf(data = TO_taz_acc,
aes(fill= TO_V_i), color = NA) +
scale_fill_distiller(palette = "Spectral",  trans = "sqrt")
plot_c_access <- ggplot() +
geom_sf(data = TO_taz_acc,
aes(fill= TO_A_i), color = NA) +
scale_fill_distiller(palette = "Spectral", trans = "sqrt")
plot_avail / plot_c_access
plot_GTHA <- ggplot() +
geom_sf(data = gtha_taz,
aes(fill= workers/AREA), color = NA) +
scale_fill_distiller(palette = "Spectral", trans="sqrt") +
guides(size = "none") +
theme(legend.position = "bottom",axis.text = element_blank(),
panel.grid = element_blank(),
panel.background = element_rect(size = 1,
color = "black",
fill = NA))
plot_GTHA
plot_GTHA <- ggplot() +
geom_sf(data = gtha_taz,
aes(fill= workers/AREA), color = NA) +
scale_fill_distiller(palette = "Spectral", trans="sqrt") +
guides(size = "none") +
theme(legend.position = "right",axis.text = element_blank(),
panel.grid = element_blank(),
panel.background = element_rect(size = 1,
color = "black",
fill = NA))
plot_GTHA
plot_GTHA <- ggplot() +
geom_sf(data = gtha_taz,
aes(fill= workers/AREA), color = NA) +
scale_fill_distiller(palette = "Spectral", trans="sqrt") +
guides(size = "none") +
theme(legend.position = "right",axis.text = element_blank(),
panel.grid = element_blank(),
panel.background = element_rect(size = 1,
color = "black",
fill = NA))
plot_GTHA
plot_GTHA <- ggplot() +
geom_sf(data = gtha_taz,
aes(fill= workers/AREA), color = NA) +
scale_fill_distiller(palette = "Spectral", trans="sqrt") +
guides(size = "none") +
theme(legend.position = "right",axis.text = element_blank(),
panel.grid = element_blank(),
panel.background = element_rect(size = 0.5,
color = "black",
fill = NA))
plot_GTHA
plot_GTHA <- ggplot() +
geom_sf(data = gtha_taz,
aes(fill= workers/AREA), color = NA) +
scale_fill_distiller(palette = "Spectral", trans="sqrt") +
guides(size = "none") +
theme(legend.position = "right",axis.text = element_blank(),
panel.grid = element_blank(),
panel.background = element_rect(size = 1,
color = "black",
fill = NA))
plot_GTHA
```{r, warning = FALSE, message = FALSE, fig.align='center, fig.height = 6}
plot_GTHA <- ggplot() +
geom_sf(data = gtha_taz,
aes(fill= workers/AREA), color = NA) +
scale_fill_distiller(palette = "Spectral", trans="sqrt") +
guides(size = "none") +
theme(legend.position = "right",axis.text = element_blank(),
panel.grid = element_blank(),
panel.background = element_rect(size = 1,
color = "black",
fill = NA))
plot_GTHA
plot_c_access <- ggplot() +
geom_sf(data = gtha_taz_acc,
aes(fill= A_i), color = NA) +
scale_fill_distiller(palette = "Spectral", trans="sqrt")+
guides(size = "none") +
theme(legend.position = "right",axis.text = element_blank(),
panel.grid = element_blank(),
panel.background = element_rect(size = 1,
color = "black",
fill = NA))
plot_c_access
plot_avail <- ggplot() +
geom_sf(data = gtha_taz_acc,
aes(fill= V_i), color = NA) +
scale_fill_distiller(palette = "Spectral", trans="sqrt")+
guides(size = "none") +
theme(legend.position = "right",axis.text = element_blank(),
panel.grid = element_blank(),
panel.background = element_rect(size = 1,
color = "black",
fill = NA))
plot_avail
plot_avail <- ggplot() +
geom_sf(data = gtha_taz_acc,
aes(fill= V_i), color = NA) +
scale_fill_distiller(palette = "Spectral", trans="sqrt") +
geom_sf(data = AccessPack::toronto_muni_bound, colour="black", fill=NA) +
guides(size = "none") +
theme(legend.position = "right",axis.text = element_blank(),
panel.grid = element_blank(),
panel.background = element_rect(size = 1,
color = "black",
fill = NA))
plot_c_access <- ggplot() +
geom_sf(data = gtha_taz_acc,
aes(fill= A_i), color = NA) +
scale_fill_distiller(palette = "Spectral", trans="sqrt") +
geom_sf(data = AccessPack::toronto_muni_bound, colour="black", fill=NA)+
guides(size = "none") +
theme(legend.position = "right",axis.text = element_blank(),
panel.grid = element_blank(),
panel.background = element_rect(size = 1,
color = "black",
fill = NA))
plot_avail / plot_c_access
plot_avail <- ggplot() +
geom_sf(data = TO_taz_acc,
aes(fill= TO_V_i), color = NA) +
scale_fill_distiller(palette = "Spectral",  trans = "sqrt")
plot_c_access <- ggplot() +
geom_sf(data = TO_taz_acc,
aes(fill= TO_A_i), color = NA) +
scale_fill_distiller(palette = "Spectral", trans = "sqrt")
plot_avail / plot_c_access
plot_GTHA <- ggplot() +
geom_sf(data = gtha_taz,
aes(fill= workers/AREA), color = NA) +
scale_fill_distiller(palette = "Spectral", trans="sqrt") +
guides(size = "none") +
theme(legend.position = "right",axis.text = element_blank(),
panel.grid = element_blank(),
panel.background = element_rect(size = 1,
color = "black",
fill = NA))
plot_GTHA
plot_GTHA <- ggplot() +
geom_sf(data = gtha_taz,
aes(fill= workers/AREA), color = NA) +
scale_fill_distiller(palette = "Spectral", trans="sqrt") +
guides(size = "none") +
theme(legend.position = "right",axis.text = element_blank(),
panel.background = element_rect(size = 1,
color = "black",
fill = NA))
plot_GTHA
plot_GTHA <- ggplot() +
geom_sf(data = gtha_taz,
aes(fill= workers/AREA), color = NA) +
scale_fill_distiller(palette = "Spectral", trans="sqrt") +
guides(size = "none") +
theme(legend.position = "right",
panel.background = element_rect(size = 1,
color = "black",
fill = NA))
plot_GTHA
plot_GTHA <- ggplot() +
geom_sf(data = gtha_taz,
aes(fill= workers/AREA), color = NA) +
scale_fill_distiller(palette = "Spectral", trans="sqrt") +
guides(size = "none") +
theme(legend.position = "right",
panel.grid = element_blank(),
panel.background = element_rect(size = 1,
color = "black",
fill = NA))
plot_GTHA
devtools::build_readme()
devtools::install(build_vignettes = TRUE)
pkgdown::build_site()
install.packages("pkgdown")
pkgdown::build_site()
pkgdown::build_site()
junk <- od_ft_tt %>% filter(trips == 2)
kable(junk, "html")
kable(toy_od_table %>% filter(Destination == "Employment Center 1"), "html")
junk <- od_ft_tt %>% filter(trips == 2)
kable(junk, "html")
kable(toy_od_table %>% filter(Destination == "Employment Center 1"), "html") %>%
kable_styling(position = "center")
kable(toy_od_table %>% filter(Destination == "Employment Center 1"), "html") %>%
kable_styling(position = "left")
kable(toy_od_table %>% filter(Destination == "Employment Center 1"), "html") %>%
kable_styling(position = "center")
kable(toy_od_table %>% filter(Destination == "Employment Center 1")) %>%
kable_styling(position = "center")
kable(toy_od_table %>% filter(Destination == "Employment Center 1"), "html") %>%
kable_styling(position = "float_center")
kable(toy_od_table %>% filter(Destination == "Employment Center 1"), "html") %>%
kable_styling(position = "float_left")
kable(toy_od_table %>% filter(Destination == "Employment Center 1"), "html") %>%
kable_styling(position = "center", latex_options = "hold_position")
knitr::opts_chunk$set(fig.align = "center", fig.pos = "!H", out.extra = "", width="100%")
knitr::opts_chunk$set(fig.align = "center", fig.pos = "!H", out.extra = "")
kable(toy_od_table %>% filter(Destination == "Employment Center 1"), "html") %>%
kable_styling(position = "c", latex_options = "hold_position")
kable(toy_od_table %>% filter(Destination == "Employment Center 1"), "html") %>%
kable_styling(position = "center", latex_options = "hold_position") %>%
kbl(centering = TRUE)
kable(toy_od_table %>% filter(Destination == "Employment Center 1"), "html") %>%
kable_styling(position = "center", latex_options = "hold_position", centering = TRUE)
kable(toy_od_table %>% filter(Destination == "Employment Center 1"), "html") %>%
kbl(centering = TRUE)
kbl(toy_od_table %>% filter(Destination == "Employment Center 1"), centering = TRUE)
knitr::include_graphics("man/figures/Greater-Golden-Horseshoe-Map.png")
pkgdown::build_site()
options(scipen = 999, digits = 3)
kable(od_ft_tt %>% summary(), "html")
pkgdown::build_site()
kable(od_ft_tt %>% summary(), "html", digits = 3)
kable(od_ft_tt %>% summary(), "html", digits = 3)
kable(od_ft_tt %>% summary(), "html", digits = 2)
knitr::opts_chunk$set(fig.align = "left", fig.pos = "!H", out.extra = "")
tts_workers <- ggplot() +
geom_sf(data = AccessPack::gtha_taz,
aes(fill= workers), color = NA) +
scale_fill_distiller(palette = "Spectral", trans="sqrt")+
theme(legend.position = "right",
panel.grid = element_blank(),
panel.background = element_rect(size = 1,
color = "black",
fill = NA))
tts_jobs <- ggplot() +
geom_sf(data = AccessPack::gtha_taz,
aes(fill= jobs), color = NA) +
scale_fill_distiller(palette = "Spectral", trans="sqrt")+
theme(legend.position = "right",
panel.grid = element_blank(),
panel.background = element_rect(size = 1,
color = "black",
fill = NA))
tts_workers / tts_jobs
ggsave("man/figures/tts-workers-jobs-plot.png")
knitr::include_graphics("man/figures/tts-workers-jobs-plot.png")
knitr::include_graphics("man/figures/tts-workers-jobs-plot.png")
tts_workers <- ggplot() +
geom_sf(data = AccessPack::gtha_taz,
aes(fill= workers), color = NA) +
scale_fill_distiller(palette = "Spectral", trans="sqrt")+
theme(legend.position = "right",
panel.grid = element_blank(),
panel.background = element_rect(size = 1,
color = "black",
fill = NA))
tts_jobs <- ggplot() +
geom_sf(data = AccessPack::gtha_taz,
aes(fill= jobs), color = NA) +
scale_fill_distiller(palette = "Spectral", trans="sqrt")+
theme(legend.position = "right",
panel.grid = element_blank(),
panel.background = element_rect(size = 1,
color = "black",
fill = NA))
tts_workers / tts_jobs
ggsave("man/figures/tts-workers-jobs-plot.png")
tts_workers <- ggplot() +
geom_sf(data = AccessPack::gtha_taz,
aes(fill= workers), color = NA) +
scale_fill_distiller(palette = "Spectral", trans="sqrt")+
theme(legend.position = "right",
panel.grid = element_blank(),
panel.background = element_rect(size = 1,
color = "black",
fill = NA))
tts_jobs <- ggplot() +
geom_sf(data = AccessPack::gtha_taz,
aes(fill= jobs), color = NA) +
scale_fill_distiller(palette = "Spectral", trans="sqrt")+
theme(legend.position = "right", axis.text = element_blank(),
panel.grid = element_blank(),
panel.background = element_rect(size = 1,
color = "black",
fill = NA))
tts_workers / tts_jobs
ggsave("man/figures/tts-workers-jobs-plot.png")
library(readxl)
library(sf)
library(tidyverse)
library(units)
gha_taz <- st_read("TTS16-data-inputs/OD-by-FT-Employment/tts06_83_region.shp")
gha_taz <- gha_taz %>%
st_transform(crs = 32617)
gha_taz <- gha_taz %>%
transmute(GTA06 = as.character(GTA06),
AREA = st_area(geometry) %>%
set_units(km^2) %>%
drop_units())
ghta_taz_id <- gha_taz$GTA06
od_ft <- read_delim(file = "TTS16-data-inputs/OD-by-FT-Employment/tts-2016-OD-FT-Employment.txt",
delim = "\t",
col_names = FALSE)
idx <- which(od_ft$X1 == "TABLE    : emp_stat (Full time)")
od_ft <- od_ft %>%
slice((idx+2):n())
od_ft <- od_ft %>%
separate(X1, into = c("Zones", "Persons"), sep = " (?=[^ ]+$)") %>%
mutate(Zones = str_trim(Zones, side = "both")) %>%
separate(Zones, into = c("Origin", "Destination"), sep = " (?=[^ ]+$)") %>%
mutate(Origin = str_trim(Origin),
Destination = str_trim(Destination),
Persons = as.numeric(Persons))
workers_ft <- od_ft %>%
group_by(Origin) %>%
summarize(workers = sum(Persons),
.groups = "drop") %>%
transmute(GTA06 = Origin,
workers)
jobs_ft <- od_ft %>%
group_by(Destination) %>%
summarize(jobs = sum(Persons),
.groups = "drop") %>%
transmute(GTA06 = Destination,
jobs)
gha_taz <- gha_taz %>%
# Join workers
left_join(workers_ft,
by = "GTA06") %>%
# Join jobs
left_join(jobs_ft,
by = "GTA06") %>%
# Replace NAs with zeros
mutate(workers = replace_na(workers, 0),
jobs = replace_na(jobs, 0))
ggplot() +
geom_sf(data = gha_taz,
aes(fill = workers),
color = NA) +
scale_fill_fermenter(direction = 1)
ggplot() +
geom_sf(data = gha_taz,
aes(fill = jobs),
color = NA) +
scale_fill_fermenter(direction = 1)
gha_taz_cent <- st_centroid(gha_taz)
#workers (origins)
workers_ft_cent <- workers_ft %>% merge(gha_taz_cent %>% select(GTA06), by="GTA06") %>% st_sf
work_origins <- cbind(workers_ft_cent, st_coordinates(st_transform(workers_ft_cent, crs = 4326))) %>%
rename(lon = "X", lat = "Y", id = "GTA06") %>% as.data.frame()  %>%
select(id, lon, lat) %>% as.data.frame()
#jobs (destinations)
jobs_ft_cent <- jobs_ft %>% merge(gha_taz_cent %>% select(GTA06), by="GTA06") %>% st_sf
job_destinations <- cbind(jobs_ft_cent, st_coordinates(st_transform(jobs_ft_cent, crs = 4326))) %>%
rename(lon = "X", lat = "Y", id = "GTA06") %>% as.data.frame()  %>%
select(id, lon, lat)
save("work_origins", file = "TTS16-data-inputs/Travel-Time-Calculations/inputs/work_origins.Rdata")
save("job_destinations", file = "TTS16-data-inputs/Travel-Time-Calculations/inputs/job_destinations.Rdata")
save("gha_taz", file = "TTS16-data-inputs/OD-by-FT-Employment/gha_taz.Rdata")
save("od_ft", file = "TTS16-data-inputs/OD-by-FT-Employment/od_ft.Rdata")
library(ggplot2)
library(dplyr)
library(MASS)
# install.packages("fitdistrplus")
# install.packages("logspline")
library(fitdistrplus)
library(logspline)
options(scipen = 999)
load(file = "TTS16-data-inputs/OD-by-FT-Employment/od_ft_tt.Rdata")
summary(od_ft_tt)
od_ft_tt <- od_ft_tt %>% mutate(travel_time = ifelse( is.na(travel_time) & Destination != "9998" & Destination != "8888" & Destination != "9999", 180, travel_time),
travel_time = ifelse( is.na(travel_time) & (Destination == "9998" | Destination == "8888" | Destination == "9999"), 300, travel_time))
summary(od_ft_tt)
tld <- od_ft_tt %>%
mutate(tt_classes = cut(travel_time,
150,
ordered_result = TRUE)) %>%
group_by(tt_classes) %>%
summarize(trips = sum(trips),
travel_time = mean(travel_time))
ggplot(data = tld,
aes(x =travel_time, y = trips)) +
geom_point()
null_dest_trips_numb <- od_ft_tt %>% filter(travel_time=="300") %>% summarize(trips = sum(trips))
totaltrip_trips_numb <- od_ft_tt %>% summarize(trips = sum(trips))
dest_180_trips_numb <- od_ft_tt %>% filter(travel_time=="180") %>% summarize(trips = sum(trips))
dest_180_trips_numb/(totaltrip_trips_numb-null_dest_trips_numb) * 100
null_dest_trips_numb/(totaltrip_trips_numb) * 100
test <- od_ft_tt %>% mutate(travel_time = ifelse(travel_time==180, seq(from = 180, to = 240), travel_time))
test <- test %>%
mutate(tt_classes = cut(travel_time,
1000,
ordered_result = TRUE)) %>%
group_by(tt_classes) %>%
summarize(trips = sum(trips),
travel_time = mean(travel_time))
ggplot(data = test,
aes(x =travel_time, y = trips)) +
geom_point()
load(file = "TTS16-data-inputs/OD-by-FT-Employment/od_ft_tt.Rdata")
tld <- od_ft_tt %>%
mutate(tt_classes = cut(travel_time,
150,
ordered_result = TRUE)) %>%
group_by(tt_classes) %>%
summarize(trips = sum(trips),
travel_time = mean(travel_time))
tld <- tld %>%
mutate(log_t = log(trips))
ggplot(data = tld,
aes(x = travel_time, y = log_t)) +
geom_point()
imp_model <- lm(formula = log_t ~ travel_time, data = tld)
summary(imp_model)
ggplot(data.frame(x = seq(1, 179, 1)) %>% mutate(f = exp(imp_model$coefficients[2] * x))) +
geom_line(aes(x = x,
y = f))
ggplot(data.frame(x = seq(1, 179, 1)) %>% mutate(f = exp(-0.0015 * x))) +
geom_line(aes(x = x,
y = f))
# Generate gamma rvs
x <- rgamma(1000, shape = 2, rate = 0.1)
den <- density(x)
dat <- data.frame(x = den$x, y = den$y)
# Plot density as points
ggplot() +
geom_point(data = dat, aes(x = x, y = y), size = 3, colour="red") +
geom_point(data = tld, aes(x = travel_time, y = trips/sum(tld$trips))) +
theme_classic()
# remove all NA trips from dataset and set all 0min travel times to 0.1min
od_ft_tt  <- od_ft_tt %>% filter( !is.na(travel_time)) %>% mutate(travel_time = ifelse(travel_time == 0, 0.1, travel_time))
all_tt <- od_ft_tt  %>% dplyr::select(trips, travel_time)
all_tt <- all_tt[rep(seq_len(dim(all_tt)[1]), all_tt$trips), 2]
descdist(data=all_tt)
#normal_ = fitdist(data=all_tt, "norm")
#weibull_ = fitdist(data=all_tt, "weibull")
gamma_ = fitdist(data=all_tt, "gamma")
#unif_ = fitdist(data=all_tt, "unif")
# lnorm_ = fitdist(data=all_tt, "lnorm")
#plot(normal_)
#plot(weibull_)
plot(gamma_)
#plot(unif_)
# plot(lnorm_)
gamma_$aic
# lnorm_$aic
ggplot(data = tld, aes(x = travel_time, y = trips/sum(trips))) +
geom_point(size = 3) +
geom_line(aes(x=travel_time, y=dgamma(travel_time, gamma_$estimate["shape"], gamma_$estimate["rate"])),
color="red", size = 1) +
theme_classic()
summary(gamma_)
#dgamma is the density plot for gamma function
od_ft_tt <- od_ft_tt %>%
mutate(f = dgamma(travel_time, gamma_$estimate["shape"], gamma_$estimate["rate"]))
plot(y=od_ft_tt$f, x=od_ft_tt$travel_time)
#car travel times for all origins to all destinations trips in TTS-16, number of associated trips, the travel time, and the impedance function (theoretical gamma distribution based on empirical trips vs. travel time).
usethis::use_data(od_ft_tt, overwrite = TRUE)
# all, unique, traffic analysis zones with associated number of workers and jobs per zone
load(file = "TTS16-data-inputs/OD-by-FT-Employment/gha_taz.Rdata")
usethis::use_data(gha_taz, overwrite = TRUE)
#boundaries of interest
load(file = "TTS16-data-inputs/Boundaries/hamilton_cma.Rdata")
usethis::use_data(hamilton_cma, overwrite = TRUE)
load(file = "TTS16-data-inputs/Boundaries/toronto_muni_bound.Rdata")
usethis::use_data(toronto_muni_bound, overwrite = TRUE)
devtools::document()
devtools::check()
devtools::build()
devtools::install()
