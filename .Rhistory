aes(size = avail_jobs),
shape = 2) +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "jobs"),
aes(size = number,
shape = )) +
scale_color_distiller(palette = "OrRd",
direction = 1) +
guides(size = "none")
toy_c_access_jobs_plot / toy_avail_jobs_plot
toy_c_access_jobs_plot <- ggplot() +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "population"),
aes(color = c_access_jobs,
size = c_access_jobs),
shape = 17) +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "population"),
aes(size = c_access_jobs),
shape = 2) +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "jobs"),
aes(size = number * 3,
shape = )) +
scale_color_distiller(palette = "OrRd",
direction = 1) +
guides(size = "none")
toy_avail_jobs_plot <- ggplot() +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "population"),
aes(color = avail_jobs,
size = avail_jobs),
shape = 17) +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "population"),
aes(size = avail_jobs),
shape = 2) +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "jobs"),
aes(size = number,
shape = )) +
scale_color_distiller(palette = "OrRd",
direction = 1) +
guides(size = "none")
toy_c_access_jobs_plot / toy_avail_jobs_plot
toy_c_access_jobs_plot <- ggplot() +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "population"),
aes(color = c_access_jobs,
size = c_access_jobs),
shape = 17) +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "population"),
aes(size = c_access_jobs),
shape = 2) +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "jobs"),
aes(size = number *3,
shape = )) +
scale_color_distiller(palette = "OrRd",
direction = 1) +
guides(size = "none")
toy_c_access_jobs_plot
toy_avail_jobs_person_plot <- ggplot() +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "population"),
aes(color = avail_jobs_per_person,
size = avail_jobs_per_person),
shape = 17) +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "population"),
aes(size = avail_jobs_per_person),
shape = 2) +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "jobs"),
shape = 16) +
scale_color_gradient2(midpoint = 1)+
guides(size = "none")
toy_avail_jobs_person_plot
toy_avail_jobs_person_plot <- ggplot() +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "population"),
aes(color = avail_jobs_per_person,
size = avail_jobs_per_person),
shape = 17) +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "population"),
aes(size = avail_jobs_per_person),
shape = 2) +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "jobs"),
shape = 16) +
scale_color_gradient2(midpoint = 1)+
guides(size = "none")
toy_avail_jobs_person_plot
toy_avail_jobs_person_plot <- ggplot() +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "population"),
aes(color = avail_jobs_per_person,
size = avail_jobs_per_person),
shape = 17) +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "population"),
aes(size = avail_jobs_per_person),
shape = 2) +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "jobs"),
shape = 16) +
scale_color_gradient2(midpoint = 1)+
guides(size = "none")
toy_avail_jobs_person_plot
toy_avail_jobs_person_plot <- ggplot() +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "population"),
aes(color = avail_jobs_per_person,
size = avail_jobs_per_person),
shape = 17) +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "population"),
aes(size = avail_jobs_per_person),
shape = 2) +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "jobs"),
shape = 16) +
scale_color_gradient2(midpoint = 1)+
guides(size = "none")
toy_avail_jobs_person_plot
toy_avail_jobs_person_plot <- ggplot() +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "population"),
aes(color = avail_jobs_per_person,
size = avail_jobs_per_person),
shape = 17) +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "population"),
aes(size = avail_jobs_per_person),
shape = 2) +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "jobs"),
shape = 16,
size = avail_workers/number) +
scale_color_gradient2(midpoint = 1)+
guides(size = "none")
toy_avail_jobs_person_plot <- ggplot() +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "population"),
aes(color = avail_jobs_per_person,
size = avail_jobs_per_person),
shape = 17) +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "population"),
aes(size = avail_jobs_per_person),
shape = 2) +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "jobs"),
shape = 16,
size = number / 700) +
scale_color_gradient2(midpoint = 1)+
guides(size = "none")
toy_avail_jobs_person_plot <- ggplot() +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "population"),
aes(color = avail_jobs_per_person,
size = avail_jobs_per_person),
shape = 17) +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "population"),
aes(size = avail_jobs_per_person),
shape = 2) +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "jobs"),
shape = 16) +
scale_color_gradient2(midpoint = 1)+
guides(size = "none")
toy_avail_jobs_person_plot
toy_avail_jobs_person_plot <- ggplot() +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "population"),
aes(color = avail_jobs_per_person,
size = avail_jobs_per_person),
shape = 17) +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "population"),
aes(size = avail_jobs_per_person),
shape = 2) +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "jobs"),
shape = 16,
size = 15) +
scale_color_gradient2(midpoint = 1)+
guides(size = "none")
toy_avail_jobs_person_plot
toy_avail_jobs_person_plot <- ggplot() +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "population"),
aes(color = avail_jobs_per_person,
size = avail_jobs_per_person),
shape = 17) +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "population"),
aes(size = avail_jobs_per_person),
shape = 2) +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "jobs"),
shape = 16,
size = number) +
scale_color_gradient2(midpoint = 1)+
guides(size = "none")
toy_avail_jobs_person_plot <- ggplot() +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "population"),
aes(color = avail_jobs_per_person,
size = avail_jobs_per_person),
shape = 17) +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "population"),
aes(size = avail_jobs_per_person),
shape = 2) +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "jobs"),
shape = 16,
size = 5) +
scale_color_gradient2(midpoint = 1)+
guides(size = "none")
toy_avail_jobs_person_plot
devtools::document()
devtools::check()
devtools::build()
devtools::install()
devtools::document()
devtools::check()
devtools::build()
devtools::install()
devtools::install(build_vignettes = TRUE)
library(AccessPack)
library(dplyr)
library(ggplot2)
library(patchwork)
od_table_using1 <- od_table %>%
mutate(V_ij = sp_avail(.,
o_id = Origin,
d_id = "Destination",
pop = Population,
opp = Jobs,
f = f))
beta <- 0.0015
od_table <- toy_od_table %>%
mutate(f = exp(-beta * distance))
od_table_using1 <- od_table %>%
mutate(V_ij = sp_avail(.,
o_id = Origin,
d_id = "Destination",
pop = Population,
opp = Jobs,
f = f))
od_table_using2 <- od_table %>%
mutate(V_ij = sp_avail2(.,
o_id = Origin,
d_id = Destination,
pop = Population,
opp = Jobs,
f = f))
beta <- 0.0015
od_table <- toy_od_table %>%
mutate(f = exp(-beta * distance))
od_table_using2 <- od_table %>%
mutate(V_ij = sp_avail2(.,
o_id = Origin,
d_id = Destination,
pop = Population,
opp = Jobs,
f = f))
beta <- 0.0015
od_table <- toy_od_table %>%
mutate(f = exp(-beta * distance))
od_table_using1 <- od_table %>%
mutate(V_ij = sp_avail(.,
o_id = Origin,
d_id = "Destination",
pop = Population,
opp = Jobs,
f = f))
identical(od_table_using1, od_table_using2)
pkgdown::build_site()
pkgdown::build_site()
devtools::install(build_vignettes = TRUE)
pkgdown::build_site()
devtools::check()
devtools::build()
# SET build_vignettes to TRUE
devtools::install(build_vignettes = TRUE)
# IMPORTANT: make sure that you've set up github pages for your repository publishing from /docs
# Build site
pkgdown::build_site()
toy_sim_zones_access[toy_sim_zones_access$id_short == max(toy_sim_zones_access$c_access_jobs), "id_short"]
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(AccessPack)
library(dplyr)
library(ggplot2)
library(sf)
library(kableExtra)
library(patchwork)
library(sf)
library(tidyverse)
ggplot(data = toy_sim_zones) +
geom_sf(aes(color = type,
shape = type,
size = number)) +
geom_sf_text(aes(label = id_short),
size = 3,
nudge_y = -600) +
scale_size(range = c(2, 7)) +
theme(axis.text = element_blank(),
legend.position = "none",
panel.grid = element_blank())
ggplot(data = toy_sim_zones) +
geom_sf(aes(color = type,
shape = type,
size = number)) +
geom_sf_text(aes(label = id_short),
size = 3,
nudge_y = -600) +
scale_size(range = c(2, 7)) +
theme(axis.text = element_blank(),
legend.position = "none",
panel.grid = element_blank())
ggsave("images/figure-1.png",
width = 3,
height = 2)
toy_sim_zones %>%
st_drop_geometry() %>%
mutate(fig = "") %>%
kable(format = "latex",
booktabs = TRUE) %>%
column_spec(5, image = "images/figure-1.png") %>%
collapse_rows(columns = 5, latex_hline = "major", valign = "middle")
# using the origin-destination table (OD) of all origin to destination trips; filter in only jobs which are mean distance or less away from a population center and sum number of jobs available in each origin (population center)
c_accessibility <- AccessPack::toy_od_table %>% filter(distance <= mean(distance)) %>% group_by(Origin) %>% summarise(c_access_jobs = sum(Jobs))
#pass conventional accessibility calculation into the spatial object (toy_sim_zones)
toy_sim_zones_access  <- toy_sim_zones %>%
merge(c_accessibility, by.x ="id", by.y = "Origin", all.x=T)
toy_c_access_jobs_plot <- ggplot() +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "population"),
aes(color = c_access_jobs,
size = c_access_jobs),
shape = 17) +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "population"),
aes(size = c_access_jobs),
shape = 2) +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "jobs"),
aes(size = number *3,
shape = )) +
scale_color_distiller(palette = "OrRd",
direction = 1) +
guides(size = "none")
toy_c_access_jobs_plot
toy_sim_zones_access[toy_sim_zones_access$id_short == max(toy_sim_zones_access$c_access_jobs), "id_short"]
max(toy_sim_zones_access$c_access_jobs)
max(toy_sim_zones_access$c_access_jobs, na.rm = T)
[toy_sim_zones_access$id_short == max(toy_sim_zones_access$c_access_jobs, na.ma=T), "id_short"]
toy_sim_zones_access$id_short == max(toy_sim_zones_access$c_access_jobs, na.ma=T), "id_short"
[toy_sim_zones_access$id_short == max(toy_sim_zones_access$c_access_jobs, na.ma=T), "id_short"]
[toy_sim_zones_access$id_short == max(toy_sim_zones_access$c_access_jobs), "id_short"]
[toy_sim_zones_access$id_short == max(toy_sim_zones_access$c_access_jobs), "id_short"]
max(toy_sim_zones_access$c_access_jobs)
toy_sim_zones_access[toy_sim_zones_access$id_short == max(toy_sim_zones_access$c_access_jobs, na.ma=T), "id_short"]
toy_sim_zones_access %>% filter(id_short == max(c_access_jobs, na.rm = T)) %>% pull(id_short)
toy_sim_zones_access %>% st_drop_geometry %>% filter(id_short == max(c_access_jobs, na.rm = T)) %>% pull(id_short)
toy_sim_zones_access %>% st_drop_geometry %>% filter(id_short == max(c_access_jobs)) %>% pull(id_short)
toy_sim_zones_access %>% st_drop_geometry %>% filter(id_short == max(c_access_jobs))
toy_sim_zones_access %>% filter(id_short == max(c_access_jobs))
toy_sim_zones_access %>% filter(id_short == max(c_access_jobs))
toy_sim_zones_access %>% st_drop_geometry %>% filter(id_short == max(c_access_jobs)) %>% pull(c_access_jobs)
max(toy_sim_zones_access$c_access_jobs, na.rm = T)
toy_sim_zones_access %>% st_drop_geometry %>% filter(id_short == max(c_access_jobs, na.rm=T)) %>% pull(c_access_jobs)
toy_sim_zones_access %>% st_drop_geometry %>% filter(id_short == max(c_access_jobs, na.rm=T))
toy_sim_zones_access[toy_sim_zones_access$id_short == max(toy_sim_zones_access$c_access_jobs, na.ma=T), id_short]
toy_sim_zones_access[toy_sim_zones_access$id == max(toy_sim_zones_access$c_access_jobs, na.ma=T), "id"]
toy_sim_zones_access[toy_sim_zones_access$id != max(toy_sim_zones_access$c_access_jobs, na.ma=T), "id"]
toy_sim_zones_access[toy_sim_zones_access$id == max(toy_sim_zones_access$c_access_jobs, na.ma=T), toy_sim_zones_access$id ]
toy_sim_zones_access[toy_sim_zones_access$id == max(toy_sim_zones_access$c_access_jobs, na.ma=T), toy_sim_zones_access$id]
toy_sim_zones_access[toy_sim_zones_access$id == max(toy_sim_zones_access$c_access_jobs, na.ma=T), id]
toy_sim_zones_access[toy_sim_zones_access$id == max(toy_sim_zones_access$c_access_jobs, na.ma=T), 1]
toy_sim_zones_access %>% st_drop_geometry %>% filter(id_short == max(c_access_jobs, na.rm=T)) %>% select(c_access_jobs)
toy_sim_zones_access %>% st_drop_geometry %>% filter(id_short == max(c_access_jobs, na.rm=T)) %>% select(c_access_jobs)
toy_sim_zones_access %>% st_drop_geometry
toy_sim_zones_access$id_short
toy_sim_zones_access$c_access_jobs
df <- toy_sim_zones_access %>% st_drop_geometry
df
class(df)
df %>% filter(c_access_jobs == max(c_access_jobs))
df %>% filter(c_access_jobs == max(c_access_jobs, na.rm = T))
df %>% filter(c_access_jobs == max(c_access_jobs, na.rm = T)) %>% select(id_short)
df[df$c_access_jobs == max(df$c_access_jobs, na.rm=T), "id_short"]
df %>% filter(c_access_jobs == max(c_access_jobs, na.rm = T)) %>% pull(id_short)
toy_sim_zones_access %>% filter(c_access_jobs == max(c_access_jobs, na.rm = T)) %>% pull(id_short)
max(toy_sim_zones_access$c_access_jobs, na.ma=T)
toy_sim_zones_access %>% filter(c_access_jobs == max(c_access_jobs, na.rm = T)) %>% pull(c_access_jobs)
toy_sim_zones_access %>% filter(c_access_jobs == max(c_access_jobs, na.rm = T)) %>% pull(c_access_jobs)
toy_sim_zones_access %>% filter(c_access_jobs == min(c_access_jobs, na.rm = T)) %>% pull(c_access_jobs))
toy_sim_zones_access %>% filter(c_access_jobs == min(c_access_jobs, na.rm = T)) %>% pull(c_access_jobs)
toy_sim_zones_access %>% filter(c_access_jobs == gmin(c_access_jobs, na.rm = T)) %>% pull(c_access_jobs)
toy_sim_zones_access %>% filter(c_access_jobs == minimum(c_access_jobs, na.rm = T)) %>% pull(c_access_jobs)
toy_sim_zones_access %>% filter(c_access_jobs == min(c_access_jobs, na.rm = T)
)
toy_sim_zones_access %>% filter(c_access_jobs == minimum(c_access_jobs, na.rm = T)) %>% pull(distinct(c_access_jobs))
toy_sim_zones_access %>% filter(c_access_jobs == min(c_access_jobs, na.rm = T)) %>% pull(distinct(c_access_jobs))
toy_sim_zones_access %>% filter(c_access_jobs == min(c_access_jobs, na.rm = T)) %>% pull(unique(c_access_jobs))
toy_sim_zones_access %>% filter(c_access_jobs == min(c_access_jobs, na.rm = T)) %>% pull(first(c_access_jobs))
toy_sim_zones_access %>% filter(c_access_jobs == min(c_access_jobs, na.rm = T)) %>% summarize(c_access_jobs)
toy_sim_zones_access %>% filter(c_access_jobs == min(c_access_jobs, na.rm = T)) %>% summarize(c_access_jobs = c_access_jobs)
toy_sim_zones_access %>% filter(c_access_jobs == min(c_access_jobs, na.rm = T)) %>% pull(slice_head(c_access_jobs))
toy_sim_zones_access %>% filter(c_access_jobs == min(c_access_jobs, na.rm = T)) %>% pull(c_access_jobs) %>% slice(1:1)
toy_sim_zones_access %>% filter(c_access_jobs == min(c_access_jobs, na.rm = T)) %>% pull(c_access_jobs)
toy_sim_zones_access %>% filter(c_access_jobs == min(c_access_jobs, na.rm = T)) %>% pull(mean(c_access_jobs))
toy_sim_zones_access %>% filter(c_access_jobs == min(c_access_jobs, na.rm = T)) %>% slice_min(c_access_jobs, n=1)
toy_sim_zones_access %>% slice_min(c_access_jobs, n=1)
toy_sim_zones_access %>% slice_min(c_access_jobs, n=1, with_ties = F)
toy_sim_zones_access %>% slice_min(c_access_jobs, n=1, with_ties = F) %>% pull(c_access_jobs)
hat center has access to.
- Population centers (triangles) in the middle of the map have access to all three employment centers and thus have the highest amount of job accessibility (i.e. Population center  `r toy_sim_zones_access %>% slice_max(c_access_jobs, n=1) %>% pull(id_short)` has the maximum job accessibility `r  toy_sim_zones_access %>% slice_max(c_access_jobs, n=1) %>% pull(c_access_jobs)`);
- Population centers (triangles) near the left edge of the map (only in proximity to the small employment center) have the least amount of job accessibility (i.e. Population center  `r toy_sim_zones_access %>% slice_min(c_access_jobs, n=1, with_ties = F) %>% pull(id_short)` has the minimum job accessibility `r toy_sim_zones_access %>% slice_min(c_access_jobs, n=1, with_ties = F) %>% pull(c_access_jobs)`);
min(toy_sim_zones_access$c_access_jobs)
min(toy_sim_zones_access$c_access_jobs, na.rm = T)
max(toy_sim_zones_access$c_access_jobs, na.rm=T)
ggplot(data = toy_sim_zones) +
geom_sf(aes(color = type,
shape = type,
size = number)) +
geom_sf_text(aes(label = id_short),
size = 3,
nudge_y = -600) +
scale_size(range = c(2, 7)) +
theme(axis.text = element_blank(),
legend.position = "none",
panel.grid = element_blank())
toy_c_access_jobs_plot <- ggplot() +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "population"),
aes(color = c_access_jobs,
size = c_access_jobs),
shape = 17) +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "population"),
aes(size = c_access_jobs),
shape = 2) +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "jobs"),
aes(size = number *3,
shape = )) +
scale_color_distiller(palette = "OrRd",
direction = 1) +
guides(size = "none")
toy_c_access_jobs_plot
toy_c_access_jobs_plot <- ggplot() +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "population"),
aes(color = c_access_jobs,
size = c_access_jobs),
shape = 17) +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "population"),
aes(size = c_access_jobs),
shape = 2) +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "jobs"),
aes(size = number *3,
shape = )) +
scale_color_distiller(palette = "OrRd",
direction = 1) +
guides(size = "none")
toy_c_access_jobs_plot
toy_sim_zones_access %>% slice_min(c_access_jobs, n=1) %>% pull(id_short)
toy_c_access_jobs_plot <- ggplot() +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "population"),
aes(color = c_access_jobs,
size = c_access_jobs),
shape = 17) +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "population"),
aes(size = c_access_jobs),
shape = 2) +
geom_sf(data = toy_sim_zones_access %>%
filter(type == "jobs"),
aes(size = number *3,
shape = )) +
scale_color_distiller(palette = "OrRd",
direction = 1) +
guides(size = "none")
toy_c_access_jobs_plot
devtools::check()
devtools::build()
# SET build_vignettes to TRUE
devtools::install(build_vignettes = TRUE)
# IMPORTANT: make sure that you've set up github pages for your repository publishing from /docs
# Build site
pkgdown::build_site()
devtools::check()
devtools::build()
# SET build_vignettes to TRUE
devtools::install(build_vignettes = TRUE)
# IMPORTANT: make sure that you've set up github pages for your repository publishing from /docs
# Build site
pkgdown::build_site()
